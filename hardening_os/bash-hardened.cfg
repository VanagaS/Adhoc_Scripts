

#Author: Aditya Naga Sanjeev, Yellapu
#Date: 10 Jan 2018

#Description: hardened bash settings for users. This scripts prepares a new file /etc/hardened_bash_rc which should be included in the last line of /etc/bashrc
#Last Updated: 26 Jan 2018
#version=0.1


GIT_PROMPT=/tmp/git-prompt.sh
PRE_EXEC=/tmp/preexec.sh
BASH_RC=/etc/hardened_bash_rc

> $BASH_RC

#############################################
# GIT PROMPT
#############################################
curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh -o $GIT_PROMPT -s
cat $GIT_PROMPT >> $BASH_RC
rm -f $GIT_PROMPT


#############################################
# PREPARE /etc/hardened_bash_rc (or $BASH_RC)
#############################################
cat <<EOF >> $BASH_RC

## Change to YELLOW when load average is above this value
LOAD_ALERT=0.8
## Change to RED when load average is above this value
LOAD_CRIT=1
## Change to YELLOW when RAM usage is above this value
FREE_RAM_ALERT=70
## Change to RED when load average is above this value
FREE_RAM_CRIT=80

## Whether underline is needed (if not saves a line in bash prompt)
SEPARATOR=1

## Save the logs
readonly LOG_PATH=/var/log/userlogs/\$USER

## switch grep to color
export GREP_OPTIONS='--color=auto'

## history options
shopt -s histappend                                                                                                                                                                                                        
export HISTFILESIZE=10000000
export HISTSIZE=1000000
#don't put duplicate lines in the history.
export HISTCONTROL=ignoredups 

## geometry
shopt -s checkwinsize

## Provide the partitions for which disk usage is required (separate each with \|)
## Example "root\|var\|home"
DISK_PARTITIONS="root\|home"

#############################################
# Declare colors
#############################################
#LIGHTGRAY="\033[0;37m"
#WHITE="\033[1;37m"
#BLACK="\033[0;30m"
#DARKGRAY="\033[1;30m"
#RED="\033[0;31m"
#LIGHTRED="\033[1;31m"
#GREEN="\033[0;32m"
#LIGHTGREEN="\033[1;32m"
#BROWN="\033[0;33m"
#YELLOW="\033[1;33m"
#BLUE="\033[0;34m"
#LIGHTBLUE="\033[1;34m"
#MAGENTA="\033[0;35m"
#LIGHTMAGENTA="\033[1;35m"
#CYAN="\033[0;36m"
#LIGHTCYAN="\033[1;36m"
#NOCOLOR="\033[0m"
LIGHTGRAY="\\[\e[00;37m\\]"
WHITE="\\[\e[1;37m\\]"
BLACK="\\[\e[0;30m\\]"
DARKGRAY="\\[\e[1;30m\\]"
RED="\\[\e[0;31m\\]"
LIGHTRED="\\[\e[1;31m\\]"
GREEN="\\[\e[0;32m\\]"
LIGHTGREEN="\\[\e[1;32m\\]"
BROWN="\\[\e[0;33m\\]"
YELLOW="\\[\e[1;33m\\]"
BLUE="\\[\e[0;34m\\]"
LIGHTBLUE="\\[\e[1;34m\\]"
MAGENTA="\\[\e[0;35m\\]"
LIGHTMAGENTA="\\[\e[1;35m\\]"
CYAN="\\[\e[0;36m\\]"
LIGHTCYAN="\\[\e[1;36m\\]"
NOCOLOR="\\[\e[0m\\]"
BOLD="\\[\e[1m\\]"
UNDERLINE="\\[\e[4m\\]"
BACKGROUND="\\[\e[3m\\]"

#############################################
# ALIASES
#############################################
alias poweroff="echo -en \"$RED\\n\\nAre you sure?\\n\\n$NOCOLOR\""
alias shutdown="echo -en \"$RED\\n\\nAre you sure?\\n\\n$NOCOLOR\""
alias reboot="echo -en \"$RED\\n\\nAre you sure?\\n\\n$NOCOLOR\""
alias folders='find . -maxdepth 1 -type d -print0 | xargs -0 du -sk | sort -rn'

#############################################
# BASH PROMPT
#############################################
function __start_timer {
  timer=\${timer:-\$SECONDS}
}

function __stop_timer {
  show_last_execution_time=\$((\$SECONDS - \$timer))
  unset timer;
}

trap '__start_timer' DEBUG

#### Git prompt settings
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=0
export GIT_PS1_SHOWCOLORHINTS=true

#### Bind F12 key for 'time' command
bind '"\e[24~": "\e[1~time \e[4~\n"'

#### Bind ENTER key for 'time' command
#bind 'RETURN: "\e[1~time \e[4~\n"'

function __get_hostname_color() {
    host=\$(hostname -s)
    value=0
    for (( i=0; i<\${#host}; i++ )); do 
        charint=\$(printf "%d" "'\${host:\$i:1}")
        value=\$((\$value + \$charint))
    done
    colors=(\$LIGHTRED \$GREEN \$LIGHTGREEN \$BROWN \$YELLOW \$LIGHTBLUE \$MAGENTA \$LIGHTMAGENTA \$CYAN \$LIGHTCYAN)
    HOST_COLOR=\${colors[\$((\$value%\${#colors[@]}))]}
    HOST=\$HOST_COLOR\$BOLD\$UNDERLINE\$host\$NOCOLOR
}

function __get_max_cpu() {
  cpu=\$(ps ax -o pid= -o pcpu= | sort -k 2 -r | head -1 | tr -s " ")
  max_cpu="\${BLUE}CPU:\$(echo \$cpu | cut -d " " -f2) PID:\$(echo \$cpu | cut -d " " -f1)\$NOCOLOR"
}

function __get_max_ram() {
  ram=\$(ps ax -o pid= -o pmem= | sort -k 2 -r | head -1 | tr -s " ")
  max_ram="\${BLUE}RAM:\$(echo \$ram | cut -d " " -f2) PID:\$(echo \$ram | cut -d " " -f1)\$NOCOLOR"
}

function __git_origin() {
  ORIGIN=\$(git config --get remote.origin.url)
  if [[ \$ORIGIN != "" ]]; then ORIGIN=\$BROWN[\$ORIGIN]\$NOCOLOR;fi
}

function __get_last() {
    LAST="[LAST:\$GREEN\${show_last_execution_time} secs\$NOCOLOR]"
}

function __get_ports() {
    _PORTS=\$(netstat -anp 2> /dev/null| grep -i tcp | grep -i listen | grep -v tcp6 | awk -F\: '{print \$2}' | awk '{print \$1" "}' | tr -d "\\n")
    PORTS="[PORTS:\$RED\${_PORTS}\$NOCOLOR]"
}

function __get_ips() {
    _IPS=\$(ip a | grep global | awk '{print \$2 ":" \$7 " "}' | tr -d "\\n")
    IPS="[IPS:\$GREEN\${_IPS}\$NOCOLOR]"
}

function __get_ram_info() {
    free_mem=0 total_mem=0 n=0; 
    while [[ \$n < 1 ]]; do 
	read text total_mem units
	read text free_mem units
	(( n++ )); 
    done</proc/meminfo
    FREE_MEM=\$((free_mem/1024))
    TOTAL_MEM=\$((total_mem/1024))
    RATIO=\$((100*\$FREE_MEM/\$TOTAL_MEM))
    if [ \$RATIO -gt \$FREE_RAM_CRIT ]; then
        MEMORY="[RAM:\$RED\$FREE_MEM/\$TOTAL_MEM MB\$NOCOLOR]"
    elif [ \$RATIO -gt \$FREE_RAM_CRIT ]; then
        MEMORY="[RAM:\$YELLOW\$FREE_MEM/\$TOTAL_MEM MB\$NOCOLOR]"
    else
        MEMORY="[RAM:\$CYAN\$FREE_MEM/\$TOTAL_MEM MB\$NOCOLOR]"
    fi
}

function __get_load_average() {
    five=0 ten=0 fifteen=0;
    read -r five ten fifteen < <(w | grep "load average" | sed -e 's/.*average://' | tr -d "," | awk '{ print \$1 " " \$2  " " \$3 }')
    if [[ $(awk 'BEGIN { print ("'\$five'" > "'\$LOAD_CRIT'" || "'\$ten'" > "'\$LOAD_CRIT'" || "'\$fifteen'" > "'\$LOAD_CRIT'")}') ]];then
        LOAD="[LOAD:\$RED\$five \$ten \$fifteen\$NOCOLOR]" 
    elif [[ $(awk 'BEGIN { print ("'\$five'" > "'\$LOAD_ALERT'" || "'\$ten'" > "'\$LOAD_ALERT'" || "'\$fifteen'" > "'\$LOAD_ALERT'")}') ]];then
        LOAD="[LOAD:\$YELLOW\$five \$ten \$fifteen\$NOCOLOR]" 
    else
        LOAD="[LOAD:\$MAGENTA\$five \$ten \$fifteen\$NOCOLOR]" 
    fi
}

function __get_disk_usage() {
    _DISKS=\$(df -h | grep \$DISK_PARTITIONS | awk '{ print \$6":"\$5 " "}' | tr -d "\n")
    DISKS="[DISK:\$CYAN\${_DISKS}\$NOCOLOR]"
}

function __get_tty() {
   SSH_TTY=\${SSH_TTY:-\`tty 2>/dev/null||readlink /proc/\$$/fd/0 2>/dev/null\`}
   _TTY=\$BLUE\$SSH_TTY
}

function __get_underline() {
   if [ \$SEPARATOR == 1 ]; then
       UNDER_="_____________________________________________________"
   else
       UNDER_=""
   fi
}

function __get_number_of_connections() {
    NUM_CONNECTIONS="[NET_CONNS: \$YELLOW\$(awk 'END {print NR}' /proc/net/tcp)\$NOCOLOR]"
}

function __get_user_color() {
    if [[ \$EUID -ne 0 ]]; then
        USER_COLOR=\$GREEN
    else
	USER_COLOR=\$RED\!\!\!\!\!\!
    fi
}

function __log_history() {
    #mkdir -p \$LOG_PATH
    #if [ "\$(id -u)" -ne 0 ]; then
	echo "\$(date +%Y-%m-%d.%H:%M:%S) \$(pwd) \$(history 1)" >> \${LOG_PATH} 
        #chmod 600 \${LOG_PATH}/\$USER
    #fi
}



function __setprompt ()
{
   local colors=\`tput colors 2>/dev/null||echo -n 1\`;
   local foreground='';

   if [[ \$colors -ge 256 ]]; then
      foreground="\`tput setaf 33 2>/dev/null\`";
   else
      foreground="\`tput setaf 4 2>/dev/null\`";
   fi;

   readonly SET_PROMPT='__get_user_color;__get_number_of_connections;__get_tty;__get_hostname_color;__get_disk_usage;__get_ips;__get_ports;__get_last;__get_load_average;__get_ram_info;__get_max_cpu;__get_max_ram;__git_origin;export PROMPT_SET="\n\$UNDER_\n\$ORIGIN\n\$PORTS\$IPS\$NUM_CONNECTIONS\n\$LAST\$LOAD\$MEMORY\n[APP MAX: \$max_cpu | \$max_ram ] ";export PROMPT="\n\$DISKS[ \$MAGENTA\T \$NOCOLOR][\$USER_COLOR\u\$NOCOLOR\$YELLOW@\$NOCOLOR\$HOST:\${_TTY} +\${SHLVL}\$NOCOLOR]\w\n$ "';
   eval \$SET_PROMPT;

   LAST_COMMAND=$?
   # To run the SET_PROMT every x seconds, add the following: ((\$SECONDS % x==0 )) as and (&&) condition with eval.
   #((\$SECONDS % 2==0 )) && eval \$SET_PROMPT;
   
   readonly PROMPT_COMMAND='__log_history;__stop_timer;unset timer;stty echo; history -a;eval \$SET_PROMPT;__git_ps1 "\$PROMPT_SET" "\$PROMPT\$NOCOLOR"';

   export PROMPT SET_PROMPT PROMPT_COMMAND SSH_TTY
}
__setprompt;__get_underline

# COLORED MANUAL PAGES {{{
# @see http://www.tuxarena.com/?p=508
# For colourful man pages (CLUG-Wiki style)
if \$_isxrunning; then
  export PAGER=less
  export LESS_TERMCAP_mb=\$'\E[01;31m'       # begin blinking
  export LESS_TERMCAP_md=\$'\E[01;38;5;74m'  # begin bold
  export LESS_TERMCAP_me=\$'\E[0m'           # end mode
  export LESS_TERMCAP_se=\$'\E[0m'           # end standout-mode
  export LESS_TERMCAP_so=\$'\E[38;5;246m'    # begin standout-mode - info box
  export LESS_TERMCAP_ue=\$'\E[0m'           # end underline
  export LESS_TERMCAP_us=\$'\E[04;38;5;146m' # begin underline
fi
#}}}

## Additional secure measures
#chattr +a ~/.bashrc
#chattr +a ~/.bash_profile
#chattr +a ~/.bash_login
#chattr +a ~/.profile
#chattr +a ~/.bash_logout
#chattr +a ~/.bashrc

readonly HISTFILE
readonly HISTFILESIZE
readonly HISTSIZE
readonly HISTCMD
readonly HISTCONTROL
readonly HISTIGNORE

readonly __get_user_color
readonly __get_number_of_connections
readonly __get_tty
readonly __get_hostname_color
readonly __get_disk_usage
readonly __get_ips
readonly __get_ports
readonly __get_last
readonly __get_load_average
readonly __get_ram_info
readonly __get_max_cpu
readonly __get_max_ram
readonly __git_origin

EOF
